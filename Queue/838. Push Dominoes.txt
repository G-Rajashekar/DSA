class Solution {
public:
    string pushDominoes(string dominoes) {
        string ans=dominoes;
        queue<pair<int,char>>q;
        for (int i=0;i<dominoes.length();i++){
            if (dominoes[i]!='.')
                      q.push({i,dominoes[i]});
        }

        while(!q.empty()){
            auto it=q.front();
            q.pop();

            if (it.second=='L'){
                if (it.first>0 && ans[it.first-1]=='.'){
                    ans[it.first-1]='L';
                    q.push({it.first-1,'L'});
                }
            }
            else{
                if (it.first+1<dominoes.length() && ans[it.first+1]=='.'){
                    if (it.first+2<dominoes.length() && ans[it.first+2]=='L'){
                            q.pop();
                    }
                    else{
                         ans[it.first+1]='R';
                          q.push({it.first+1,'R'});
                    }
                }
            }
        }
        return ans;
    }
};

TC:O(n)
SC:O(n)